CREATE DATABASE INVENTORY;

USE INVENTORY;


---------Supplier table ---------------------
CREATE TABLE SUPPLIER
(SID CHAR(5) NOT NULL,
SNAME VARCHAR(20) NOT NULL,
SADD VARCHAR(50) NOT NULL,
SCITY VARCHAR(20),
SPHONE CHAR(15),
SEMAIL VARCHAR(50),
primary key (SID) 
);

--drop table supplier;
ALTER TABLE SUPPLIER
ADD CONSTRAINT DEF_CITY DEFAULT 'DELHI' FOR SCITY;

ALTER TABLE SUPPLIER
ADD CONSTRAINT UNI_PHONE UNIQUE(SPHONE);

SELECT * FROM SUPPLIER;

-----------------------------------------------------
CREATE TABLE PRODUCT
(PID CHAR(5),
PDESC VARCHAR(50) not null,
PRICE INT,
CATEGORY CHAR(5),
SID CHAR(5)
);

--drop table product;

ALTER TABLE PRODUCT
ALTER COLUMN PID CHAR(5) NOT NULL;

ALTER TABLE PRODUCT
ADD CONSTRAINT PKID_P PRIMARY KEY(PID);

ALTER TABLE PRODUCT
ADD CONSTRAINT CH_PRICE CHECK (PRICE > 0);

ALTER TABLE PRODUCT
ADD CONSTRAINT CH_CATEGORY CHECK (CATEGORY IN ('IT', 'HA', 'HC'));

ALTER TABLE PRODUCT
ADD CONSTRAINT FKID FOREIGN KEY (SID) REFERENCES SUPPLIER(SID);


-------------- CUSTOMER TABLE ------------------------
CREATE TABLE CUSTOMER
(CID CHAR(5),
CNAME VARCHAR(30) NOT NULL,
CADDRESS VARCHAR(50) NOT NULL,
CITY VARCHAR(30) NOT NULL,
PHONE CHAR(15) NOT NULL,
EMAIL VARCHAR(50) NOT NULL,
DOB DATE );

ALTER TABLE CUSTOMER
ADD CONSTRAINT CH_DOB CHECK (DOB < '1-JAN-2000');

ALTER TABLE CUSTOMER
ALTER COLUMN CID CHAR(5) NOT NULL;

ALTER TABLE CUSTOMER
ADD CONSTRAINT PK_CID PRIMARY KEY(CID);


--------------------ORDERS TABLE ------------------------
CREATE TABLE ORDERS
(OID CHAR(5),
ODATE DATE,
PID CHAR(5),
CID CHAR(5),
OQTY INT);

ALTER TABLE ORDERS
ALTER COLUMN OID CHAR(5) NOT NULL;

ALTER TABLE ORDERS
ADD CONSTRAINT PK_OID PRIMARY KEY (OID);

ALTER TABLE ORDERS
ADD CONSTRAINT FK_PID FOREIGN KEY (PID) REFERENCES PRODUCT(PID);

ALTER TABLE ORDERS
ADD CONSTRAINT FK_CID FOREIGN KEY (CID) REFERENCES CUSTOMER(CID);

ALTER TABLE ORDERS
ADD CONSTRAINT CH_OQTY CHECK (OQTY >= 1);



------------STOCK TABLE --------------------------
CREATE TABLE STOCK
(PID CHAR(5),
SQTY INT,
ROL INT,
MOQ INT);

SELECT * FROM STOCK;

ALTER TABLE STOCK
ADD CONSTRAINT CH_SQTY CHECK (SQTY >= 0);

ALTER TABLE STOCK
ADD CONSTRAINT CH_ROL CHECK (ROL > 0); 

ALTER TABLE STOCK
ADD CONSTRAINT CH_MOQ CHECK (MOQ >= 5);

ALTER TABLE STOCK
ADD CONSTRAINT FK_S_PID FOREIGN KEY (PID) REFERENCES PRODUCT(PID);


------PURCHASES TABLE -------------------
CREATE TABLE PURCHASES
(PID CHAR(5),
SID CHAR(5),
PQTY INT,
DOP DATE);



-----------------INSERTING DATA---------------------
SELECT * FROM SUPPLIER;  --5-10 RECORDS

INSERT INTO SUPPLIER (SID, SNAME, SADD, SPHONE, SEMAIL)
VALUES ('S0001', 'WEBER LOGISTICS', '405 CAPITAL HILL', '9696900001', 'WEBERLOGISTICS@GMAIL.COM');

INSERT INTO SUPPLIER
VALUES ('S0002', 'UNIVERSAL SUPPLY', 'DNO 345 KALI GHAT', 'KOLKATA', '9696900202', 'U_SUPPLY345@GMAIL.COM');

INSERT INTO SUPPLIER
VALUES ('S0003', 'QUALITY DISTRIBUTION', '101, RD NO 36, BANJARA HILLS', 'HYDERABAD', '9696900333', 'QUALITY_DIST@GMAIL.COM');

INSERT INTO SUPPLIER
VALUES ('S0004', 'SANTOSH TRADERS', 'PLOT 854 TAMBARAM', 'CHENNAI', '9696942424', 'SANTY_TRADERS@GMAIL.COM'),
('S0005', 'SUNSHINE DISTRIBUTOR', '13 DWARAKA', 'DELHI', '9696922555', 'SUNSHINE_DIST@GMAIL.COM');

INSERT INTO SUPPLIER
VALUES ('S0006', 'WODAYAR SOLUTIONS', '67 SADASIVNAGAR', 'BANGALORE', '9696900696', 'WODAYAR_SOLS@YAHOO.COM');

UPDATE SUPPLIER SET SADD = '67 SADASIVA NAGAR'
WHERE SID = 'S0006';

------------INSERTING INTO PRODUCT TABLE-------------
SELECT * FROM SUPPLIER;

SELECT * FROM PRODUCT;
INSERT INTO PRODUCT 
VALUES ('P0001', '15 IN DELL LAPTOP', 65000, 'IT', 'S0001');

INSERT INTO PRODUCT
VALUES ('P0002', '8 IN ACER TABLET', 12500, 'IT', 'S0001'),
('P0003', 'DELL WIRELESS KEYBOARD', 3800, 'IT', 'S0002'),
('P0004', 'HP WIRELESS MOUSE', 1500, 'IT', 'S0002'),
('P0005', 'HP DESKTOP COMPUTER', 40000, 'IT', 'S0003'),
('P0006', '20 IN DELL MONITOR ', 1800, 'IT', 'S0003');

INSERT INTO PRODUCT
VALUES ('P0007', 'PELOTON TREADMILL', 88000, 'HC', 'S0004'),
('P0008', 'AVION ROWER', 105000, 'HC', 'S0004'),
('P0009', 'SOULCYCLE AT HOME BIKE', 56000, 'HC', 'S0004'),
('P0010', 'DIGITEK DIGITAL THERMOMETER', 2000, 'HC', 'S0005'),
('P0011', 'DIGITEK TEMPERATURE GUN  ', 3500, 'HC', 'S0005');

INSERT INTO PRODUCT
VALUES ('P0012', '1 LTR LEVOIT HUMIDIFIER', 9500, 'HA', 'S0006'),
('P0013', 'PREETI GRINDER', 18000, 'HA', 'S0006'),
('P0014', 'MURPHYS 10 LTR CONVENTIONAL OVEN', 9800, 'HA', 'S0006'),
('P0015', 'SAMSUNG 150 LTR REFRIGIRATOR', 40000, 'HA', 'S0006'),
('P0016', 'PHILIPS AIR FRYER', 12000, 'HA', 'S0006');

SELECT * FROM SUPPLIER;
SELECT * FROM PRODUCT;

---------------INSERTING INTO STOCK TABLE -------------
INSERT INTO STOCK
VALUES('P0001', 30, 10, 5),
('P0002', 25, 10, 5),
('P0003', 100, 25, 20),
('P0004', 150, 25, 20),
('P0005', 30, 10, 5),
('P0006', 50, 10, 5),
('P0007', 20, 5, 5),
('P0008', 40, 20, 10),
('P0009', 30, 10, 5),
('P0010', 150, 30, 30),
('P0011', 150, 30, 30),
('P0012', 30, 10, 5),
('P0013', 30, 10, 5),
('P0014', 30, 10, 5),
('P0015', 30, 10, 5),
('P0016', 30, 10, 5);

SELECT * FROM STOCK;

---------------------INSERTING DATA INTO CUSTOMER TABLE-----------
SELECT * FROM CUSTOMER;
INSERT INTO CUSTOMER
VALUES ('C0001', 'ASWINI RAJAGOPALAN', '2/4 G.K. MANSIONS, WALTAIR', 'VIZAG', '9803424884', 'ASRAJAGOPAL@GMAIL.COM', '31-MAY-1985'),
('C0002', 'RUPESH CHOUDARY', 'C 224 MADHURA NAGAR', 'HYDERABAD', '9803429172', 'RUPESHCHOW@GMAIL.COM', '17-AUG-1980'),
('C0003', 'SUHAS PATNI', '334 AJMER RD', 'JAIPUR', '98034248000', 'SUHASPATNI@GMAIL.COM', '15-OCT-1983'),
('C0004', 'MADHURI BHAGAT', '712-C WESTERN PLAZA, MANIKONDA', 'HYDERABAD', '9803423999', 'MADBHAGAT1@GMAIL.COM', '24-JUL-1985'),
('C0005', 'TEJA CHAND', '9 ARUNDALE PET', 'CHENNAI', '9803424433', 'CHANDTEJA@GMAIL.COM', '24-APR-1993'),
('C0006', 'NEELIMA RAI', '843 SHANTINAGAR', 'HYDERABAD', '9803426689', 'RAINEELU@GMAIL.COM', '9-SEP-1986'),
('C0007', 'KIRAN MANGAT', '36 ASTRAL VIEW', 'PUNE', '9804349698', 'KMANGAT@GMAIL.COM', '20-OCT-1983'),
('C0008', 'KASHI VISWANATH', 'A-9, KRISHNA NAGAR', 'DELHI', '9802003636', 'KVISWANATH@GMAIL.COM', '6-DEC-1993'),
('C0009', 'JACOB JOSE', '67 ALLEPPY RD', 'KOCHI', '9805006666', 'JJOSE@GMAIL.COM', '28-FEB-1988'),
('C0010', 'GAUTAM DAS', '56 POLY HEIGHTS, DASPALLA', 'VIZAG', '9803423030', 'GDAS@GMAIL.COM', '17-MAY-1983');


----------------------INSERTING DATA INTO ORDERS TABLE ----------
SELECT * FROM ORDERS;

INSERT INTO ORDERS
VALUES ('O0001', '15-OCT-2022', 'P0007', 'C0010', 1),
('O0002', '15-OCT-2022', 'P0009', 'C0006', 1),
('O0003', '16-OCT-2022', 'P0016', 'C0005', 2),
('O0004', '22-OCT-2022', 'P0003', 'C0002', 3),
('O0005', '30-OCT-2022', 'P0010', 'C0009', 10);


------ASSIGNMENT-5 /PART-2   -----
-- 1) IN THE INVENTORY TABLE DISPLAY PID, PDESC, CATEGORY, SNAME, SCITY

SELECT * FROM SUPPLIER;

SELECT P.PID, P.PDESC, P.CATEGORY, S.SNAME, S.SCITY
FROM PRODUCT P
LEFT JOIN SUPPLIER S
ON P.SID = S.SID;


--2) DISPLAY OID, ODATE, CNAME, CADDRESS, CPHONE, PDESC, PRICE, OQTY, AMT
SELECT O.OID, O.ODATE AS 'DATE', C.CNAME AS 'CUSTOMER NAME', C.CADDRESS AS 'CUSTOMER ADDRESS', C.CITY AS 'CUSTOMER CITY', C.PHONE AS 'CUSTOMER PHONENO', 
P.PDESC AS 'PRODUCT', P.PRICE AS 'PRICE', O.OQTY AS 'QTY', O.OQTY*P.PRICE AS 'AMT'
FROM ORDERS O
inner JOIN CUSTOMER C
ON O.CID =C.CID
inner JOIN PRODUCT P
ON O.PID = P.PID;


--3) IN THE INVENTORY STRUCTURE GENERATE A VIEW BILL. IT SHOULD DISPLAY
-- OID, ODATE, CNAME, ADDRESS, PHONE, PDESC, PRICE, OQTY, AMOUNT


CREATE VIEW BILL
AS 
	SELECT O.OID, O.ODATE, C.CNAME, C.CADDRESS, C.PHONE, P.PDESC, P.PRICE, O.OQTY , P.PRICE*O.OQTY AS 'AMOUNT'
	FROM ORDERS O
	LEFT JOIN CUSTOMER C
	ON O.CID =C.CID
	LEFT JOIN PRODUCT P
	ON O.PID = P.PID;

SELECT * FROM BILL;




-------- PROCEDURES TO INSERT AND DISPLAY DATA  WITH AUTO GENERATED IDS------------------

------FUNCTION TO GENERATE ID

CREATE FUNCTION GENERATE_ID(@C AS CHAR(1), @I AS INT)
RETURNS CHAR(5)
AS
BEGIN
	DECLARE @ID AS CHAR(5)
	SET @ID = CASE 
				WHEN @I < 10 THEN CONCAT(@C, '000', @I)
				WHEN @I < 100 THEN CONCAT(@C, '00', @I)
				WHEN @I < 1000 THEN CONCAT (@C, '0', @I)
				WHEN @I < 10000 THEN CONCAT(@C,@I)
				ELSE 'NA'
				END;
	RETURN @ID;
END;

SELECT DBO.GENERATE_ID('Z', 09);



-----SEQUENCE FOR SUPPLIER ID
CREATE SEQUENCE SUPP_SEQ
AS INT
START WITH 9
INCREMENT BY 1;


-----SEQUENCE FOR PRODUCT ID
CREATE SEQUENCE PROD_SEQ
AS INT
START WITH 20
INCREMENT BY 1;



------SEQUENCE FOR CUSTOMER ID
CREATE SEQUENCE CUST_SEQ
AS INT
START WITH 13
INCREMENT BY 1;



-----SEQUENCE FOR ORDER_ID
CREATE SEQUENCE ORD_SEQ
AS INT
START WITH 12
INCREMENT BY 1;



-- ADDSUPPLIER 
-- SHOULD ADD THE SUPPLIER IN THE SUPPLIER TABLE AND DISPLAY THE DETAILS OF THE NEW SUPPLIER ADDED

CREATE PROCEDURE ADDSUPPLIER ( @SN AS VARCHAR(40), @SA AS VARCHAR(40), @SC AS VARCHAR(40), @SPH AS VARCHAR(10), @SEM AS VARCHAR(50))
AS
BEGIN

	DECLARE @I AS INT;
	DECLARE @ID AS CHAR(5);

	SET @I = (NEXT VALUE FOR SUPP_SEQ);
	SET @ID = DBO.GENERATE_ID('S',@I);


	INSERT INTO SUPPLIER 
	VALUES (@ID, @SN, @SA, @SC, @SPH, @SEM);

	SELECT * FROM SUPPLIER
	WHERE SID = @ID ;

END;


ADDSUPPLIER 'PINNACLE LOGISTICS', 'SECTOR 9, RK PURAM', 'CHENNAI', '9003056969', 'PINNACLE_LOGISTICS@GMAIL.COM';
ADDSUPPLIER 'STAR DISTRIBUTORS', '971, MG ROAD' , 'BANGALORE', '9525050020', 'STAR_DISTB@GMAIL.COM';
--ADDSUPPLIER 'UNITED LOGISTICS', 'NO. 45, SELAM RD', 'CHENNAI', '9638527410', 'UNITED@GMAIL.COM';



------ ADDPRO --------------
--(PROCEDURE FOR PRODUCT TABLE)

CREATE PROCEDURE ADDPRO (@PDES AS VARCHAR(50), @P AS INT, @CAT AS CHAR(2), @SID AS CHAR(5))
AS
BEGIN
	DECLARE @I AS INT;
	DECLARE @PID AS CHAR(5);

	SET @I = (NEXT VALUE FOR PROD_SEQ);
	SET @PID = DBO.GENERATE_ID('P',@I);

	INSERT INTO PRODUCT
	VALUES( @PID, @PDES, @P, @CAT, @SID);

	SELECT * FROM PRODUCT
	WHERE PID = @PID;

END; 

ADDPRO 'DIGITEK BP MONITOR', '2800', 'HC', 'S0010';
ADDPRO 'NUTRI BULLET 500 ML', '6500', 'HA', 'S0009';
--ADDPRO 'LG 1LTR FOOD PROCESSOR', 12500, 'HA', 'S0008';



------- ADDCUST ------
--(PROCEDURE FOR CUSTOMER TABLE) 

CREATE PROCEDURE ADDCUST ( @CN AS VARCHAR(40), @CA AS VARCHAR(50), @CC AS VARCHAR(30), @CPH AS CHAR(10), @CEM AS VARCHAR(50), @CD AS DATE)
AS
BEGIN
	DECLARE @I AS INT;
	DECLARE @CID AS CHAR(5);

	SET @I = (NEXT VALUE FOR CUST_SEQ);
	SET @CID = DBO.GENERATE_ID('C',@I);


	INSERT INTO CUSTOMER
	VALUES (@CID, @CN, @CA, @CC, @CPH, @CEM, @CD);

	SELECT * FROM CUSTOMER
	WHERE CID = @CID;

END;

ADDCUST 'JIGME WANGCHUK', 'SECTOR 6, DWARAKA', 'DELHI', '9006030303', 'JIGME_W@GMAIL.COM', '11-JAN-1989';
ADDCUST 'ALI SETH', 'P-3, RD NO 10, BANJARA HILLS', 'HYDERABAD', '9592520030', 'SETH_ALI@GMAIL.COM', '13-AUG-1984';
--ADDCUST 'RAJSHEKAR SHETTY', '89 TEMPLE ST, MANIKONDA', 'HYDERABAD', '9517538246', 'RAJ_SHETTY@GMAIL.COM', '15-DEC-1991';



--------ADDORDER ----
--(PROCEDURE FOR ORDERS TABLE)
-- SHOULD ADD THE ORDER IN THE ORDERS TABLE AND DISPLAY THE DETAILS OF THE ORDER, ORDER DATE SHOULD BE CURRENT DATE AND SHOULD COME AUTOMATICALLY

CREATE PROCEDURE ADDORDER( @PID AS CHAR(5), @CID AS CHAR(5), @OQ AS INT)
AS 
BEGIN

	DECLARE @I AS INT;
	DECLARE @OID AS CHAR(5);

	SET @I = NEXT VALUE FOR ORD_SEQ;
	SET @OID = DBO.GENERATE_ID('O',@I);

	INSERT INTO ORDERS
	VALUES( @OID, GETDATE(), @PID, @CID, @OQ);

	SELECT * FROM ORDERS
	WHERE OID = @OID;
END;

------******************************************************************
----****** TO CHECK THE WORKING OF MY TRIGGERS AND PURCHASES TABLE   

ADDORDER 'P0002', 'C0002', 16;
ADDORDER 'P0009', 'C0007', 1;
--ADDORDER 'P0008', 'C0006', 10;       
--ADDORDER 'P0008', 'C0005', 11;
--ADDORDER 'P0012', 'C0001', 8;
SELECT * FROM PRODUCT;
SELECT * FROM CUSTOMER;
SELECT * FROM ORDERS;
SELECT * FROM STOCK;
SELECT * FROM PURCHASES;

--***********************************************************************

-------------------------TRIGGERS ----------------------------------


-- TRIGGER FOR INSERT ON ORDERS-TABLE WITH CONDITION: ORDER GOES THROUGH ONLY WHEN SUFFICIENT STOCK IS AVAILABLE IN STOCK-TABLE

CREATE TRIGGER TR_ORDER_INSERT_CK_STOCK
ON ORDERS
FOR INSERT
AS
BEGIN

		--VARIABLES FOR UPDATING STOCK TABLE

		DECLARE @Q_INSTOCK AS INT;   -- QTY IN STOCK (FROM STOCK TABLE)
		DECLARE @Q_REQD AS INT;     -- QTY REQUIRED  (FROM INSERT STATEMENT)

		SET @Q_INSTOCK = (SELECT SQTY FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));
		SET @Q_REQD = (SELECT OQTY FROM INSERTED);


		--VARIABLES FOR INSERTING VALUES INTO PURCHASE TABLE 

		DECLARE @P_ID AS CHAR(5);   --PRODUCT ID 
		DECLARE @S_ROL AS INT;		--ROL OF THE PRODUCT (FROM STOCK TABLE)
		DECLARE @S_MOQ AS INT;      --MOQ OF THE PRODUCT  (FROM STOCK TABLE)
		DECLARE @P_SID AS CHAR(5);  --SUPPLIER ID CORRESPONDING TO THE PRODUCT (FROM PRODUCT TABLE)

		SET @P_ID = (SELECT PID FROM INSERTED);     --IMPORTANT TO SAVE THIS VALUE BEFORE COMMIT-BECAUSE AFTER COMMIT, THE 'INSERTED TABLE' DISAPPEARS.
		SET @S_ROL = (SELECT ROL FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));
		SET @S_MOQ = (SELECT MOQ FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));
		SET @P_SID = (SELECT SID FROM PRODUCT WHERE PID = (SELECT PID FROM INSERTED));


		IF @Q_INSTOCK >= @Q_REQD         --IF CONDITION IS MET, ACCEPT ORDER AND UPDATE STOCK TABLE
			BEGIN
				UPDATE STOCK SET SQTY = (SQTY - @Q_REQD) WHERE PID = (SELECT PID FROM INSERTED);
				COMMIT;
				PRINT('ORDER ACCEPTED');

				
				--PLACE PURCHASE ORDER IF STOCK GOES BELOW ROL
				DECLARE @S_QTY AS INT;			--SQTY IN STOCK TABLE CORRESPONDING TO PID; IMPORTANT TO GET IT AFTER COMMIT
				SET @S_QTY = (SELECT SQTY FROM STOCK WHERE PID = @P_ID);  
				    
				IF @S_QTY < @S_ROL
						INSERT INTO PURCHASES VALUES(@P_ID, @P_SID, @S_MOQ, GETDATE());
			END;
		
		ELSE

			BEGIN
				ROLLBACK;
				PRINT('ORDER REJECTED: INSUFFICIENT/ UNAVAILABLE  STOCK');
			END;

END;



------TRIGGER ON ORDER TABLE FOR UPDATE WITH CHECK FOR STOCK QUANTITY-----------

CREATE TRIGGER TR_ORDER_UPDATE_CK_SQTY
ON ORDERS
FOR UPDATE
AS
BEGIN

		DECLARE @ORIG_STOCK AS INT;
		DECLARE @OLD_QTY_REQD AS INT;
		DECLARE @NEW_QTY_REQD AS INT;
		DECLARE @UPDATED_STOCK AS INT;


		SET @ORIG_STOCK = (SELECT SQTY FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));
		SET @OLD_QTY_REQD = (SELECT OQTY FROM DELETED);
		SET @NEW_QTY_REQD = (SELECT OQTY FROM INSERTED);
		SET @UPDATED_STOCK = @ORIG_STOCK + @OLD_QTY_REQD ;

		
		IF @UPDATED_STOCK > @NEW_QTY_REQD
			BEGIN
			 
				UPDATE STOCK SET SQTY = (@UPDATED_STOCK - @NEW_QTY_REQD) WHERE PID = (SELECT PID FROM INSERTED);
				COMMIT;
				PRINT('ORDER UPDATE ACCEPTED');

			END;

		ELSE
			BEGIN

				ROLLBACK;
				PRINT('ORDER UPDATE REJECTED: INSUFFICIENT STOCK');

			END;
END;

-----------------------------------------------------------------------

--TRIGGER ON PRODUCT TABLE FOR DELETE

CREATE TRIGGER TR_PRODUCT_DELETE
ON PRODUCT
FOR DELETE
AS
	BEGIN
	DELETE FROM STOCK WHERE PID = (SELECT PID FROM DELETED);
	END;


DELETE FROM PRODUCT WHERE PID = 'P0019';
/* RUNNING INTO TROUBLE HERE: ERROR MSG - 
Msg 547, Level 16, State 0, Line 449
The DELETE statement conflicted with the REFERENCE constraint "FK_S_PID". The conflict occurred in database "INVENTORY", table "dbo.STOCK", column 'PID'.
The statement has been terminated.
*/


SELECT * FROM SUPPLIER;
SELECT * FROM PRODUCT;
SELECT * FROM STOCK;